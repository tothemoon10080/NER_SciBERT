This paper presents a modified method of discontinuous deformation analysis (DDA). In the presented method, open-close iteration may not be needed, small penetration is permitted among blocks, and springs are added between contacting block pairs only when a penetration takes place. The three contact patterns (i.e. sliding, locking and opening) in original DDA method are not involved, and the recognition of these contact patterns and treatment of transformation among patterns are not required either, significantly saving the computing time. In a convex to concave contact, there are two candidate entrance edges which may cause uncertainty. In this case, we propose the angle bisector criterion to determine the entrance edge. The spring stiffness is much larger than Young's modulus in the original DDA, however we find that the correct results can still be obtained when it is much smaller than Young's modulus. Finally, the penetrations by using penalty method and augmented Lagrangian method are compared. Penetration of the latter is 1/4 of the former. The range of spring stiffness for the latter is wider than the former, being 0.01–1 of the former. Both methods can lead to correct contact forces.Discontinuous deformation analysis (DDA) pioneered by The open-close iteration is an important step and also a difficulty in DDA. The original DDA method conducts 5 iterations at each time step, which means that the global equations will be solved for 5 times within one time step. So the computation workload is much heavy. Moreover, there is few reports illustrating the detailed process of open-close iteration.  In the original DDA method, the contact situations are classified into three patterns, i.e. opening, sliding and locking, and relevant operations are needed for the transformation among the patterns. Moreover, the penalty number is always much greater than the Young's modulus. A modified method of DDA is proposed in this study. It can improve the classic DDA in the following aspects: (i) open-close iteration could be omitted and correct results can still be achieved, meaning that the computing speed can be improved; (ii) indetermination in corner–corner contact is solved with a simplified approach; (iii) there is no need to distinguish the three contact patterns and the transformations among them, therefore such modified method can be much simplified and computation can be speeded up; and (iv) stiffness in penalty method and ALM can be less than the Young's modulus while correct contact force can still be obtained. In the original DDA method, the formulae of the complete first order approximation are adopted to calculate block displacements ( Blocks are not allowed to penetrate each other in the original DDA theory. Therefore, normal and shear springs are added in block system. This process is called penalty method. To ensure no penetration and no tensile force existing among blocks, open-close iteration must be carried out within every time step. However, the penetration among blocks could not be zero no matter how high the stiffness of spring is. In fact, the contact forces between two adjacent blocks are provided by springs in penalty method. If the contact forces are not zero, the penetration could not be zero either. So, if small penetrations are permitted to exist among blocks, no open-close iteration is needed in DDA simulation. In the original DDA process, contact patterns between adjacent blocks, such as opening, sliding and locking, should be recognized and recorded at each time step so that springs can be added to or removed from these blocks. In the modified method, contact detection among block system is performed at every time step, so the recognition of contact patterns will not be necessary. This will make the DDA process simpler and time-saving. The modified DDA process can be summarized as the following steps: Input block geometry data, including each vertex's sequence number and coordinate, each block's sequence number, and then draw the graphics of blocks. Input physico-mechanical properties, such as Young's modulus, Poisson's ratio, density, friction angle, cohesion of joint material, and initial velocity. Input parameters for computing control, including length of time step, total simulation time, maximum displacement in one step, critical distance for separating vertex–vertex (V–V) contact and vertex-edge (V–E) contact, stiffness of normal and tangential springs. Set coefficient matrix Treat the fixed displacements in block system (generally zero, i.e. fixed points). Add body force-induced sub-matrices to global equations. Add elastic sub-matrices to global equations. Add inertia force-induced sub-matrices to global equations. Add other sub-matrices. Detect contacts among block system, and find the invading vertices and entrance edges. Only add normal and tangential springs or friction sub-matrices to global equations while invading takes place. Solve the global equations Calculate the displacement of vertices according to block displacement Update block coordinates, and draw blocks' geometry. Accumulate the time of simulation. Reduce the time interval for next time step if the maximum displacement in current time step is reached. Go to step 4 if the accumulated time is less than total simulation time. The end of program. Block initial coordinates can be acquired by the following way: number all the vertices in the block system, and save all the coordinates of the vertices in a matrix; then input each block's sequence number in counter-clockwise; in the end, find out each block's vertex coordinates.  When the friction angle Displacements In some condition, open-close iterations may be needed. In that case, a loop from step 10 to step 12 described in Section We succeeded in conducting open-close iterations by the following procedure: Before iteration, all sub-matrices except the ones derived from normal and tangential springs should be added to the global equations. Supposing the coefficient matrix and matrix of free terms in global equations are Detect penetration among blocks for blocks at position 0. If any penetration occurs, add normal and tangential springs (or friction) sub-matrices to the global equations. Supposing the coefficient matrix is For the second iteration, detect penetration among blocks at position 1, and add spring sub-matrices to In the original DDA theory, the spring stiffness The contact of blocks in DDA is divided into two categories, i.e. V–V contact and V–E contact. The aim of contact detection is to find out all these two contacts, and to determine the invading vertices and the entrance edges. A certain pair of invading vertex and entrance edge may belong to V–V contact or V–E contact. The original DDA theory fails to distinguish it. In this modified method, these two categories of contacts are defined according to the following criterion: (i) if the distance between vertices of any two blocks is less than a critical value For both V–V contact and V–E contact, only when the penetration takes place, we can add normal and tangential springs between the invading vertices and entrance edges, i.e. adding the spring sub-matrices to Once the invading vertices in V–E contact are determined, the entrance edges must be found out. Usually, the shortest distance method is adopted to determine the entrance edge, i.e. the edge of the invaded block with nearest distance to the invading vertex is the entrance edge. However, only when the displacement is small, the shortest distance criterion can lead to reasonable results. In DDA simulation, one may encounter such a situation: for the same contact problem, it can be taken as either V–V contact or V–E contact and the entrance edge may not be the same one. As shown in Two concave vertices cannot form a contact, so only two situations are considered in contact detection: contact between two convex vertices, and contact between a convex vertex and a concave vertex. When a convex vertex penetrates a concave one, two edges of the target vertex may be the entrance edge, as shown in To solve this problem, the angle bisector criterion is adopted to determine the entrance edge, i.e. to compare This angle bisector criterion is also applicable to the contact of two convex vertices. In that case, it has the same essence as the shortest distance criterion. Therefore, the shortest distance criterion is actually replaced by the angle bisector criterion in the modified method. The penalty method was originally used in the DDA method to enforce contact constraints at block interfaces, and the contact force was also calculated with the penetration depth. However, many researchers found that the accuracy of the contact solution depends highly on the choice of the penalty number and the optimal number cannot be explicitly found beforehand. Based on the principle of the minimum potential energy, sub-matrices derived from springs and contact forces should be added to the global equations, and the relevant formulae can be found in We simulate again the example of block sliding along incline with ALM, as indicated in From Eq. Contact forces acting on a rectangle sliding along an incline has been analyzed by For ALM and penalty method with and without open-close iteration are adopted respectively in this modified DDA method. The penetrating depths and normal contact forces are listed in As shown in To validate the modified method, an example using angle bisector criterion is presented in  The modified DDA method and the complete simulation process presented in this paper can omit open-close iterations and does not need to recognize the contact patterns and the transform among them, making the simulation quick and simplified. For the contact with invading vertex on the angle bisector, two springs are added to both edges of the target vertex, so that the DDA code can correctly treat this special V–V contact. For both ALM and penalty method, the spring stiffness can be smaller than Young's modulus; and in ALM, the penetrating depths can be significantly less than those of penalty method. Blocks are temporarily separated in this study. For jointed rock mass, if a proper criterion such as Mohr-Coulomb theory is implemented into the friction matrix, the modified DDA method can simulate the fracture process of rock mass. The authors wish to confirm that there are no known conflicts of interest associated with this publication and there has been no significant financial support for this work that could have influenced its outcome. This work is supported by