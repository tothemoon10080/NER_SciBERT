Ornamental stones are natural building materials, extracted from quarries, which need to be cut and processed sustainably. Natural discontinuities adversely affect the sawing/cutting of blocks into commercial-size slabs. This work presents a 3D optimization algorithm for the sawing/cutting of ornamental stone blocks. The developed algorithm is based on 3D modeling of discontinuities as data input. The algorithm search for the intersection between a 3D cutting grid formed of a determined size of slabs and the model of discontinuities leading to calculate the recovery ratio considering several cutting orientations and displacements of the 3D cutting grid. The algorithm was coded in a program named SlabCutOpt that allows speed problem solving. SlabCutOpt was implemented on a real case study of a commercial-size limestone block extracted from a quarry in Italy. A number of 37 different commercial-sizes of slabs forming 37 cutting grids were tested to investigate the optimum results in geo-environmental direction (recovery ratio) and economic direction (revenue). The findings revealed that a certain slab size gave the optimum recovery ratio, whilst another slab size provided the optimum revenue.Ornamental stones are natural non-renewable resources that have to be exploited and processed in an optimized way to minimize waste production and maximize revenue. It is just a third of the extracted stone raw material arrives to the global market as a finished product, whilst the two-thirds remaining are waste, considering the worldwide average in the ornamental stones extraction ( The right exploitation of ornamental stone is crucial for any competitive economic growth roadmaps of countries aiming the sustainable development ( Blocks are cut/sawed in processing plants using diamond disc saws, diamond blade saws, or gang-saws. Currently, the most used is multi-blades gang-saws that can cut a block to slabs with certain and specific thickness. Several previous work studied the cutting process of ornamental stones considering the sawability ( Discontinuities, fractures and bedding planes define the exploitability of commercial-size ornamental stone blocks from quarries ( A survey on fracture detection methods is provided in ( With reference to the use of GPR in order to detect and model discontinuities and assessing of rock blocks, it worth to mention the works in ( Previous works presented stochastic or geometric algorithms, aiming to analyze the fracture geometry and quantify the volume of the so called natural blocks, that are defined by the natural discontinuities planes ( A number of works have considered the production optimization at quarry or bench scale ( Several open questions on production optimization during the cutting phase of slabs from a block are: (i) which dimensions of slabs/tiles to be cut/marketable? (ii) Which is the best orientation of block cutting (parallel to x-plane, y-plane, or z-plane)? and (iii) What is the optimum angle of slabs cut from a block? In order to answer these questions, this paper presents a 3D computational algorithm developed to optimize the cutting grid pattern of a block, starting from a 3D fracture modeling method presented in ( The developed 3D optimization algorithm generates a 3D cutting grid for a block. The 3D cutting grid represents the slabs with equal dimensions (dim_x, dim_y, dim_z), as shown in The algorithm detects the intersection between the slabs (cutting grid) and the fractures model or the six faces of the block body. In this paper, the discontinuities model represents a model of fractures, joints, and voids. Iteratively, the cutting grid is rotated using a 3D rotation mode. The cutting orientations of the slabs can be parallel to the XY plane, XZ plane, or YZ plane of the block (see The intersection between a slab and a discontinuity (or with the faces of the block body) is detected by using a segment/triangle intersection algorithm ( In the processing plants, cutting saws work with a continuous water flow that is required for cooling and reducing dust emissions caused by sawing. The dust is the material lost during sawing which can be then reused for further applications ( The developed algorithm was coded using the C++ programming language and makes use of the OpenMP library for multithreading computations. The software package developed was named “SlabCutOpt” on the basis of the algorithm aim: Slab Cutting Optimization. The input data of SlabCutOpt is composed of several files: SlabCutOpt.par: ASCII file containing the input parameters of cutting grid. It has to contain the geometric dimensions of the block body, the parameters about orientation-rotation and displacement, and options concerning the operating mode and the output mode, etc. The algorithm can also work only in 2D, avoiding testing for the Z direction. See PLY files: each discontinuity or set of discontinuities has to be modeled in one or more file using the polygon file format (ply) ( PLY_FileList.dat: this is the ASCII file with the list of the ply files. See slab_dimensions.dat: this is the ASCII file contains the list of the several sizes of slabs to be tested. See The results files of SlabCutOpt are ASCII files with detailed information on the computations of the grid cutting optimization search, in addition to files needed for the 3D visualization. The results files of SlabCutOpt are: Results.log file: this is an ASCII file, where each row contains, for each slab size, the orientation of the 3D cutting grid, the applied displacements, the number of non-intersected slabs inside the block body, and the number of intersected slabs inside the block body. See slabs vtu files: optionally, a set of vtu files are generated for the 3D visualization of the cutting grid. The vtu file generation can be the whole set of cutting grids scenarios or just for the best solution (maximum number of non-intersected slabs). A slab type code is assigned to each slab, in the vtu files, to allow an easy visual perception of the kind of slab: out bounding of the block, intersected and non-intersected slabs. The vtu files can be then visualized using, for example, the free and open source visualization software ParaView ( SlabCutOpt was applied to a real case study. The rock type of the commercial size block under study (1.55 m x 2.9 m x 1.10 m) was compacted limestone with a creamy-white color. It is a highly fractured limestone block whose out-cropping fractures and furthermore discontinuities could be detected and deterministically modeled as 3D surfaces based on GPR survey, this model of discontinuities and description of the block under study is presented in ( The revenue estimation of the block was carried out on the basis of a Relative Money Value (RMV) for each slab size, calculated by Eq.  For each slab size of The results of the slab No. 1 (size 40.0 cm x 20.0 cm x 1.50 cm) are given in The maximum number of non-intersected slabs and the maximum recovery ratio for each tested slab size are represented in From an economic point of view, neither the maximum recovery ratio nor the maximum number of non-intersected slabs can be used as comparison indicator for the cutting grid optimization within a range of different slab sizes. When several sizes are considered, the total revenue calculated by Eq. Interestingly, as shown in The grain texture or pattern of an ornamental stone product is an important commercial characteristic. The final product aesthetic pleasure is taken in account when the block is cut for applications of prestigious and decoration purposes. The rotation of the cutting grid may cause a change of the final texture of the ornamental stone product in case of stones with veins or color gradation patterns. The presented algorithm can be used for stones which have a uniform color with a texture that is insensitive to the grid rotation and for materials used for building and construction applications that do not concern with texture. It was referred to such these cases of possible rotation of the cutting pattern also by ( The surface area of the slabs tested, in the case study, played a main role in the run of SlabCutOpt software. The maximum number of non-intersected slabs, is strongly correlated in a negative power relation with the surface area value of the slabs ( The computation time of the SlabOptCut run (considering parameter write_vtu=1, see Cutting scenarios (3D cutting grid patterns) of a stone block could be tested using the presented software code SlabCutOpt to optimize the recovery ratio or the revenue of the block. We developed a 3D optimization algorithm to simulate several 3D cutting scenarios of slabs. Discontinuities need to be modeled for the whole volume of the ornamental stone block. For each 3D cutting scenario, the algorithm calculates the number of non-intersected slabs - with discontinuities or the block body borders - which allowed calculating the recovery ratio. The optimization algorithm SlabCutOpt was successfully coded in C++ and allowed to visualize the optimized result in 3D using a data visualization software package, such as ParaView. The presented algorithm can work with discontinuities data described in PLY files whatever the detection method is. In the presented case study, the results was based on modeling discontinuities, as 3D surfaces, detected by GPR survey, as recommended by the authors. However, the obtained results are subjected to the limitations of the GPR method. If a tinny hidden fracture could not be detected, it may lead to have unconsidered fractured slab, particularly when it is open fracture. Therefore, using more than a method for fracture detection or more than one GPR frequency (higher) can increase the accuracy of the discontinuities model. For the presented case study of a limestone block, among 37 several -sizes of slabs, the cutting grid of slab size No. 23 of dimensions 30.0 cm x 10.0 cm x 3.0 cm provided the optimum production recovery ratio. Furthermore, economic factors have to be taken into account to correctly evaluate the optimal solution of the cutting grid scenario. Slab size No. 21 of dimensions 30.5 cm x 30.5 cm x 1.0 cm provided the final optimal economical solution. A negative power correlation was found between the maximum number of the non-intersected slabs and the surface area of slabs. This correlation can be used, for example, to estimate the maximum number of non-intersected slabs for other cutting grid sizes. SlabCutOpt is recommended to be used in quarrying companies to maximize recovery and revenue, it can provide stone processing factories with the slab sizes that optimize revenue and minimize waste. Moreover, SlabCutOtp allows quarrying companies to study the potential revenue value of different slab sizes products, enabling quarrying companies to estimate the revenue and recovery ratio when commitment with customers exists regarding particular slab sizes. Waste material quantity and size can be estimated using SlabCutOpt allowing further studying of waste re-processing and recycling potential. Future works include the considerations of the cutting cost, energy consumption, and material texture preference in the algorithm. A comparison study between the computed cutting patterns by SlabCutOpt and the actual cutting results of stone blocks at a processing plant is recommended. A combination of non-destructive fracture detection and modeling techniques and SlabCutOpt is recommended for environmental and economic sustainable reasons. The authors are grateful to Michele Augelli, “Augelli Marmi” quarrying company, for allowing the GPR test and to Carlo Cormio (SERENGEO Srl, a spin-off company of the University of Bologna) for the technical suggestions provided. A special word of thanks goes to the EU-METALIC II—ERASMUS MUNDUS program that funded the lead author’s PhD scholarship. Many thanks to the Italian The directives of the working mode, the bounding domain, output options of SlabCutOpt are included in the SlabCutOpt.par file. Keywords are briefly resumed in the given example file below. The PLY file format readable by SlabCutOpt is a simplified version of the more general PLY file format, such as the example below. Each element must have 3 vertices (a triangle in the 3D space). The fixed characters are presented in italic, while the geometrical parameters for a discontinuity description are presented in bold. After the header, a number specified in [ The PLY_FileList.dat input file must contain the list of the ply files of the modeled discontinuities. No header is allowed. Below is an example of PLY_FileList.dat. The slab_dimensions.dat input file must contain the list of the different sizes of slabs that the algorithm must test. Below is an example of slab_dimensions.dat. The order of the columns, from left to right, is dim_x, dim_y, dim_z. The dimensions of the slabs must be increased by the cut_saw_thickness for geometrical considerations in the algorithm. The results file is an ASCII file containing the optimization results. The first part lists the dimension of the slabs tested, as shown in the example below. Following, a list of solutions is provided for each size. The list consists of 12 columns, from left to right there are: the order number of iteration, dim_x, dim_y, dim_z, theta, phi, psi, the total number of slabs inside the block, and the number of intersected slabs. Optimization results: