Existing electrical generating stations must operate with greater flexibility due to increasing renewable energy penetration on the electrical grid, and many coal-fired power stations have transitioned away from baseload operation to load-following operation to aid in grid stability. In cases where multiple independently controlled cooling tower cells are used in parallel for the cooling purposes of such stations, there is an opportunity to increase plant efficiency through data-driven optimization across their full load ranges. This work presents a novel application of real-time optimization using machine learning and particle swarm optimization on a multi-cell induced-draft cooling tower servicing a coal-fired power station under variable load. This is the first work to demonstrate simultaneous optimization of a multi-cell cooling tower, in addition to using machine learning for closed-loop control on a cooling tower. A novel control configuration is presented that ensures original control logic is not adversely affected and that the overall plant process is not disrupted using only existing hardware and operational data. To verify this methodology, the 12 independent cooling tower cells are simulated in parallel using historic operating data to demonstrate the effectiveness of real-time optimization compared to current practice. An artificial neural network is trained to predict overall cooling tower power consumption using only operational data and ambient conditions with an R2 value of greater than 0.96. The real-time optimization using particle swarm yields 6.7% annual energy usage savings compared to current practices, although the extent of the real-time savings varies greatly with both plant load and environmental conditions. This is particularly significant for a variable load situation because frequent ramping typically results in reduced overall efficiency. This proposed AI-based solution presents an opportunity to improve the overall heat rate of a load-following coal-fired power plant without the need to perform extensive first-principles modeling or add additional hardware to the cooling tower, resulting in more resources conserved and less overall emissions per unit of electricity generated.Proportional–integral–derivative (controller) Particle Swarm Optimization Neural Network Particle Swarm Optimization Typical Meteorological Year Variable Frequency Drive Hyper-parameter, weighting factor for the personal best component of velocity in PSO algorithm Hyper-parameter, weighting factor for the swarm best component of velocity in PSO algorithm Heat capacity of moist air, Heat capacity of liquid water, Local bulk mass concentration of water vapor, Ambient mass concentration of water vapor–determined using relative humidity, ambient temperature, and psychrometric charts, Mass concentration of water vapor at surface of droplet, Local mass concentration of liquid water, Diameter of water droplets (assumed constant), Binary diffusion coefficient of water vapor in air, Difference between the current outlet temperature ( Heat of vaporization of water, Thermal conductivity of air, Tunable parameter for PID controller associated with the error derivative, units based on manipulated and control variables Tunable parameter for PID controller associated with the error integral, units based on manipulated and control variables Tunable parameter for PID controller associated with the error value, units based on manipulated and control variables Length of a single cooling tower cell, Mass of moist air in a discretized volume, Local mass flow-rate of moist air through cooling tower, Local mass flow-rate of water vapor through cooling tower, Mass flow-rate of water vapor exiting the Local mass flow-rate of liquid water through cooling tower, Mass flow-rate of water exiting the Number of cooling tower cells, Nusselt number, Power consumption of a given fan, Personal best solution of particle Global best solution of swarm in dimension Nominal power consumption for each fan, Prandtl number of air, Reynolds number of falling, spherical water droplet, Random number between [0,1] Surface area of a single spherical water droplet (assumed constant), Total surface area of water droplets in a discretized volume, Schmidt number of moist air, Sherwood number, Temperature of moist air in a discretized volume, Temperature of ambient air, Cooling tower outlet temperature. This is the temperature of the cooled water exiting the cooling tower and entering the condenser, Set-point temperature of the water entering the condenser, Return temperature. This is the temperature of the hot water pumped from the condenser to the cooling tower to be cooled, Temperature of liquid water in a discretized volume, Temperature of water exiting the Initial fan-speed when the PID controller is turned on at timestep 0, range [0,1] Calculated fan-speed for timestep Velocity of moist air relative to cooling tower, Volumetric airflow through a given fan, Nominal volumetric airflow through each fan, Discretized volume, Volume of a single spherical water droplet (assumed constant), Velocity update for particle Relative velocity of moist air to falling water droplet, Volumetric flow-rate of water to the cooling tower, Velocity of water droplets relative to cooling tower (assumed constant), Hyper-parameter, inertia weight of particle in PSO algorithm Width; dimension along the flow of air, Location in solution space of particle Width of discretized volume (See Height; dimension along the flow of water droplets, Height of discretized volume (See Density of liquid water, Efficiency for a given fan, There is a need for greater system flexibility to adjust to intermittent energy sources as the electrical grid is increasingly subjected to renewable energy penetration ( The influx of renewable energy has drastically changed the economics of electricity generation in favor of more flexible power stations. In response to this, many thermal power stations – traditionally designed and operated to provide baseload power – now perform load-following operation to offset the increased variability in electricity production that is inherent from solar and wind installations ( This work considers the real-time optimization of an induced-draft evaporative cooling tower that supports a thermal plant participating in the real-time energy market. At a thermal power station, an evaporative cooling tower receives the hot water used to condense the steam exiting the turbine and uses large fans to induce evaporation. This cools the water, which is then sent back to the condenser to repeat the cycle. Such cooling towers are divided into cells, each with an independently controlled fan that determines the outlet temperature from the cell into a collective basin (see By achieving greater efficiency across the load range, the plant as a whole is made more economically viable and can more easily meet environmental standards. This work combines three key concepts in demonstrating this optimization methodology: particle swarm optimization, artificial neural networks, and numerical modeling. Literature relevant to each concept is provided in Section In order to demonstrate the optimization’s relative effectiveness, this work uses a simulation based on a cross-flow induced-draft cooling tower that supports a 500 MW coal-fired unit. As total energy used is influenced by the changing load on the plant, a simulation allows for direct comparison of the optimized results to current practice under identical conditions. The cooling tower has 12 cells, each having a fan equipped with a variable frequency drive (VFD). The cooling tower processes 180,000 GPM (11.36 m Additionally, these relative power usage values are not constant over time. Initially, the relative fan power usage is constant, but after a large change in the load of the plant, the relative power usage of each of the fans changes significantly, with some fans becoming more efficient at the new plant load, and others becoming less efficient. This brief analysis of operational data shows the need for an optimization scheme that accounts for the individual fan efficiencies and their dependence on environmental conditions in determining the 12 unique fan-speeds for each control decision. Such a complex process would be difficult to model analytically and very labor intensive to maintain accuracy over time in an industrial setting where engineers are not typically available for such work. As cooling towers are auxiliary equipment at a thermal power station, an ideal modeling and optimization solution would not require routine manual intervention. It is desirable to have a modeling method that can 1) accurately predict cooling tower performance and 2) adjust to changes in performance over time without manual intervention. A machine learning model is therefore an ideal choice for modeling such a system. With cooling towers so ubiquitous in commercial and industrial applications, much work has been done to model and optimize their performance. Singh and Das perform a multi-objective optimization of a single cooling tower with a genetic algorithm using empirical correlations to determine the optimal approach temperature, evaporation rate, and operating costs ( Mu, Li, House, and Salsbury point out the difficulty in creating accurate cooling tower models and the computational expense of evaluating them, which is not desirable for optimization ( García, Ruiz, and Lucas consider a cooling tower and chiller together and compare 4 different control strategies: fan cycling control, multiple-speed fan motor control in 3 stages of velocity, frequency-modulating control via VFD, and a custom optimum control that directly minimizes total cost of water and energy (while staying within a dead-band) ( There are some works that consider optimization of multiple commercial cooling towers (treated the same as multi-cell cooling towers), notably the work of The current work follows the same objective as Schlei-Peters et al. (increasing operational efficiency), while further relaxing their modeling assumption that each cooling tower cell is identical, which is not currently addressed in literature. While a given manufacturer may have designed parallel cells to have identical specifications, Schlei-Peters et al. also note the inaccessibility of essential data to easily fit cooling tower models in practice, and their model requires a notable amount of manual work to fit it to the operational data using knowledge from operators and manufacturer information. This manual fitting step is necessary for any theoretical model used in practice, and such a model needs to be periodically refit to operational data to adjust model parameters for performance degradation and maintenance over time. The current work seeks to drastically simplify this model fitting process with the use of a machine learning model, specifically an artificial neural network. A neural network can be trained on whatever operational data is available and determine appropriate correlations without the need for manual input, and it can be retrained automatically and frequently as it does not require manual input. The main algorithm used to find each optimal operating point for the cooling tower is particle swarm optimization, which iteratively moves a population of solutions (particles) through the search space until they converge on an optimal solution ( In the fields of modeling and optimization, machine learning has already been proven to be a very effective tool for addressing complex operational issues across other industries. Regarding control, machine learning has been used in a variety of fields. Barbosa et al. provide a review of machine learning research and applications within the petroleum drilling industry ( For cooling towers, existing uses of machine learning are typically focused on performance prediction under various conditions. Hosoz, Ertunc, and Bulgurcu employ neural networks for general cooling tower performance predictions ( Machine learning has already been applied to the boiler of a load-following plant to control NOx emissions ( The final element to this work is numerical modeling. In lieu of a physical cooling tower, a numerical model is developed to demonstrate the relative effectiveness of the particle swarm optimization and neural network at improving efficiency. The numerical model is employed to mimic the performance of a physical multi-cell cooling tower, so the neural network can have sufficient data for training and testing. While this numerical model is certainly a simplified representation of a cooling tower, it serves to demonstrate the effectiveness of this technique in preparation for eventual application on a physical system. The current work follows a similar approach as Hajidavalloo, Shakeri, and Mehrabian in their numerical modeling of a cross-flow induced-draft cooling tower using a 2D discretization along the directions of water and air flow ( This work assesses the potential of using machine learning to increase the efficiency of a multi-cell cooling tower that supports a coal-fired power plant participating in the real-time energy market. Machine learning models can be expected to capture the nuances of individual cooling tower cells and the extent to which each cell affects tower performance as a whole. Once properly trained, the model can be used with a global optimization algorithm such as particle swarm optimization to determine individual control moves for each cell of the cooling tower to minimize the total power consumed. This work proposes a novel application for machine learning by optimizing a multi-cell, induced-draft cooling tower with the fan-speed of each cell considered as an independent manipulated variable. The framework for optimization based on machine learning discussed in this work has the added benefit of being able to solve in real-time, without requiring any additional hardware or prior modeling of the particular cooling tower. Additionally, even if the manufacturer specifications are identical, the neural network can learn the different efficiencies of each cell so the particle swarm optimization can optimize the system accordingly. This optimization scheme shows potential for application to other types of equipment within a power plant to further improve the heat rate of the plant. The following list contains the major novelties of this work: Developed novel method for closed-loop machine learning optimization Applied this novel method on a simulated PID-controlled cooling tower, a system where machine learning has never before been used for closed-loop control Demonstrated high level of accuracy on a system that would otherwise be nearly impossible to maintain an accurate first-principles model due to system degradation and other evolving factors Demonstrated that a neural network can learn simulated cooling tower behavior in closed-loop without knowing the underlying parameters, allowing this method to generalize to more complex systems providing there is sufficient data Created control/training structure inherently bypasses the need for additional constraints on fans Designed framework to augment existing controls without risk of instability or plant disruption, while also minimizing power consumption Demonstrated significant energy savings at scale, 6.7% total energy usage reduction of cooling tower, while achieving the same cooled water temperature Proposed methodology that requires minimal operator knowledge Proposed methodology that requires little-to-no hardware upgrades Achieved solution in real-time, which is essential for an application intended to be used on a physical system Showed potential for plant-wide efficiency increase by better managing the efficiency of large, auxiliary equipment; often optimization of such equipment is overlooked when seeking to improve plant efficiency Simultaneously optimized multiple, unique cooling tower cells, which is equivalent to optimizing several parallel cooling towers Section The following section outlines the methodology and technical details of optimization and the simulation used to demonstrate its effectiveness. Section One reoccurring hurdle to adopting new optimization schemes is the implementation costs. Often, plants will forego an upgrade if there is a large installation expense or if current, time-tested controls must be altered. For this reason, this optimization scheme is designed to wrap around existing proportional–integral–derivative (PID) controls with no additional hardware requirements. A diagram of the optimization scheme is shown in PID controllers are single-input-single-output (SISO) controllers that manipulate the value of one variable to control the value of another to a given set-point, and this controller type is ubiquitous in industrial applications ( A neural network is supplied as the objective function of a particle swarm optimization (PSO) procedure, which determines the fan offset values that minimize total power consumption at steady-state operation. These offset values are added to the existing PID controller output, and the sums are written to the individual fans. It is important to note that the timescales of the existing PID controller and the optimization are significantly different. The optimized offset values are calculated and implemented much less frequently than the PID controller. While the PID controller may recalculate multiple times per minute, the optimized offset values are calculated once or multiple times per hour. This ensures the system remains stable because the PID controller controls all fans simultaneously. Therefore, offsetting individual fan-speeds relative to the PID controller can be treated as a disturbance, which the PID controller can adjust to as needed to maintain the temperature set-point. Ultimately, the key benefit to this configuration is that the PID controller remains in control of the cooling tower, and the optimized offset values adjust the relative speed of the fans to ensure minimal power usage solely in response to the individual fan efficiencies, guaranteeing overall efficiency improvements. The PSO with a neural network as its objective function is referred to collectively as the Neural Network Particle Swarm Optimization (NN–PSO). In lieu of the actual cooling tower, a numerical model of the cooling tower is used to simulate a full year of results based on actual operational historic data. In order to train the initial neural network, the control scheme shown in The blue boxes in It is possible that, if the neural network were not configured properly, minimizing the power consumption would simply result in setting all fans to the lowest power setting. This is undesirable because the temperature set-point for the cooling tower would not be achieved and the main process would be disrupted. However, the control scheme is structured such that maintaining the temperature set-point and minimizing power consumption are not in conflict. This is accomplished by providing only steady-state ambient and plant values as inputs to the neural network. A key component of this configuration is that when using a trained neural network to make predictions, the required temperature set-point is input as a state variable to the network (rather than the current temperature), forcing the neural network to only consider solutions where the PID controller has achieved the desired set-point. When a change in ambient conditions or within the plant occurs, the NN-PSO immediately adjusts the fan offsets using the new steady-state conditions. Then the PID controller can make further adjustments as necessary. The final key benefit of the NN-PSO is its adaptability. After an initial training phase, the neural network can be retrained using the past optimization results. This has the effect of rapidly converging the neural network to more accurate predictions in the vicinity of optimal solutions as well as adapting to the changes of a real system over time.  The manipulated (decision) variable inputs are the 12 fan offset values, and the disturbance (fixed) inputs are the ambient and tower conditions. This includes the return temperature of the water, the temperature of the cooled water leaving the tower, the ambient temperature, and the relative humidity. These 16 inputs are used to estimate the resulting steady-state power consumption of the cooling tower at these conditions. The PID output is not given to the neural network, but the steady-state PID output is a function of the ambient and plant conditions, so the training data produces a one-to-one mapping of inputs to power consumption. When performing the PSO algorithm, the neural network is evaluated many times to ultimately determine the optimal fan offset values which minimize power consumption. A neural network is an ideal objective function because most of the computational effort takes place during the offline training phase. Therefore, within the context of the PSO algorithm, the neural network can be evaluated much faster than could a numerical model of the cooling tower. In addition to speeding up the optimization procedure, the neural network has the added advantage over empirical and first-principles models of continuously adjusting to changes in performance through retraining. While theoretical models of cooling towers can offer accurate performance predictions, they require costly manual analysis of the cooling tower to determine the necessary parameters. Furthermore, following any maintenance or performance degradation, these parameters will change in unpredictable ways and need to be determined through additional analysis. From an operations perspective, it is very desirable to have a data-driven model that can automatically adapt to changing conditions and performance over time, such as a neural network. The training process for the neural network occurs as follows: The system is run in training mode (see The neural network is trained on the dataset created during step 1. The system is switched to optimization mode (see The resulting dataset is appended to the current training dataset. The neural network is retrained on the full dataset. Steps 3 through 5 are repeated until a desired neural network accuracy is achieved. The repeated retraining of the model on system results helps the model to rapidly explore the potential variable space and identify relationships between many unique input combinations and actual real-time performance. As the model is exposed to more data, it rapidly increases in prediction accuracy through exposure to numerous unique training instances across the variable space, rather than only the common operational configurations. In addition, the initial seeding of the training set with random offset values helps further ensure the neural network has sufficient training data across the variable space. Particle swarm optimization is a global optimization technique that relies on swarm intelligence to find an optimal solution ( For this problem, the values selected for After updating the solutions values, In order to prove the viability of this optimization scheme, a simulation of the cooling tower is created to show relative gains achievable through optimization. The simulation takes the place of the physical cooling tower, and data snapshots are taken once the simulation reaches a steady-state following a change in plant and ambient conditions. However, in practice, this optimization scheme can be applied to actual cooling towers and other equipment without the need for any modeling or simulation because the physical system provides all the training and testing data necessary for the neural network. A numerical model of the cooling tower is developed for the purpose of validating the optimization control scheme before application to the live system. The model is based on empirical heat and mass transfer relationships that are solved repeatedly throughout the cooling tower in small discretized volumes. After solving a single discretized volume to determine the conditions of the water and air, these values are used to solve adjacent volumes.  While this numerical model is certainly a simplified approximation of a cooling tower, it has been tuned in order to display similar behavior as a physical cooling tower. This model is sufficient to validate the performance of the NN-PSO on such a system and generalize the qualitative results to a physical cooling tower. Eq. heat and mass diffusion are negligible water droplets can be treated as spheres of equal, constant size that are evenly distributed water falls at a constant velocity there is a consistent bulk mass concentration of water vapor across each discretized area for a given timestep pressure is uniform fluid flow is uniform free convection is negligible compared to forced convection In addition to the differential equations in Eq. Eq. Mass concentrations of liquid water and water vapor are the values tracked throughout all discretized volumes in the cooling tower cell. However, the flow rates are of interest at the exit points of the water and air streams. Eq. The Reynolds number ( The total surface area of the falling water in a single discretized volume, Rather than using changing droplet sizes, it is assumed the number of droplets is proportional to the amount of water in a given discretized volume. This accounts for the fact that the droplets are breaking apart and reforming rapidly as they contact the fill in the cooling tower, which is designed to increase the exposed surface area of the water and slow its descent. In order to determine the power consumption of each cooling tower fan, Eq. After the temperature and mass concentration for every cooling tower cell are calculated, the temperature of the water sent to the condenser is calculated using an average of the temperatures exiting the 12 cells, weighted by the mass flow-rates, as shown in Eq. Finally, in order to demonstrate that the neural network can sufficiently learn the nuances of the cooling tower, it is important that the cells differ from each other, as they would in a physical cooling tower. This simulation varies two parameters across the 12 cooling tower cells, the fan efficiency and the flow of water through each cell. The flow of water entering a cell is taken as a percentage of the total 180,000 GPM (11.36 m In reality, real cooling tower cells will differ from each other in more than two parameters, and as shown in In total, this simulation incorporates a system of 4 differential equations (see Eq. If the NN-PSO proves superior on this simulated cooling tower compared to current practice, then similar results can be anticipated on a physical cooling tower because in both cases, the underlying equations and parameters are not given to the neural network. The key advantage of the NN-PSO method is that it can be applied without modifying existing controls and without the need to perform expensive and time-consuming physics-based modeling of the individual cooling tower cells or the full tower itself. A simulation is performed using Python for numerical modeling of the cooling tower, TensorFlow for the neural network ( A mesh analysis is performed to determine adequate mesh sizing, with the results shown in The neural network is trained according to the procedure outlined in Section The R A full year of actual plant operational data is used to demonstrate the effectiveness of the NN-PSO. Historic plant return temperatures from a plant in southern Utah, are supplemented with local TMY data ( For comparison, the same year of data is simulated again using the current practice, with all 12 fans at the PID output value. The year of simulated data is plotted based on the return temperature of the water, which is strongly correlated to the generation load of the plant (see It is worth noting that the actual cooling tower is designed to cool a range of 23.9 °F (13.2°C), which corresponds to a return temperature of 34.4°C. At this load only, there is an average of 2.6% savings in simulation. However, using a year of data from a load-following profile yields 6.7% savings, which is approximately 20,000 kWh of annual energy savings from the cooling tower fans. This large difference between the savings at design specifications and under recent historic conditions shows that the savings are even more significant for power stations that are performing load-following operation than ones that are still performing baseload operation.  The potential savings vary by month as well, with warmer months achieving less savings. The colder months demonstrate the most savings potential as the cooling tower operates more efficiently due to a lower wet bulb temperature. The savings are shown by season in   The ambient temperature can be seen to follow the day and night cycle (hour 0 is midnight), with the highest temperatures during the day. Conversely, the return temperature (and thus load) can also be seen to cycle but with the highest loads during times renewable energy is less available. The total power of the cooling tower fans follows the PID output exactly because no fans are offset from this value.  With the NN-PSO, all fan-speeds are determined by the PID output with the optimized fan offsets added, then clamped between 0 and 1. In order to ensure the PID can achieve the desired set-point, the PID upper and lower bounds are adjusted after each NN-PSO calculation to allow for all fans to reach their extreme values. For example, if the smallest offset calculated by the NN-PSO is −50%, then the PID output would be limited between 0 and 1.5 to ensure the lowest fan can still achieve its maximum value if necessary. The PID output for the fall can be seen to briefly go above 1 to maintain the temperature set-point with the given offset values; however this does not result in any fans performing above 1 because the final values are clamped between 0 and 1. Although there are 12 fans, only three representative fans are shown on the plot to simplify the figure. The fan with the highest average fan-speed, the fan with the lowest, and the fan with the median were selected to give a sense of the range of the control decisions using the NN-PSO and PID. The ‘‘current practice’’ plot is the same power output from  The savings are again more dramatic at lower loads. There are also more savings overall compared to the fall months, which is consistent with  As expected based on In context of the increased renewable energy penetration into the electrical grid, this work presents a novel application of machine learning to real-time optimization of a multi-cell induced-draft cooling tower that supports a coal-fired power plant performing load-following. This is the first work to demonstrate simultaneous optimization of a multi-cell cooling tower, in addition to using machine learning for closed-loop control on a cooling tower. The optimization scheme entails training an artificial neural network using data from steady-state load-following operations to learn the nuances of the tower behavior at various loads. A numerical simulation of the cooling tower is created for the purpose of demonstrating the effectiveness of the optimization relative to current practice. The trained neural network accurately learns the performance of a simulated cooling tower which is based on a system of 4 differential equations, boundary conditions that change each timestep, 24 cooling tower cell-specific parameters, and closed-loop PID control of outlet temperature. An R The optimization methodology is proven in a year-long simulation using historic operational data and demonstrates the potential to increase the overall heat rate of the power plant. 6.7% annual energy savings are achieved for the optimized cooling tower compared to current practice. This shows that significantly better performance can be achieved by including each fan as a decision variable in the optimization, rather than treating them all as a single decision variable. It is also found that greater savings are achieved during colder months as well as at lower electrical generation loads of the plant, which now happen more frequently due to load-following operation. This method has several advantages over other conventional modeling and optimization methods: the machine learning model can easily adapt to nuanced and complex changes in the plant operation over time by retraining; it is more likely to be adopted in practice because it can be installed without needing to change the existing plant controls; no expensive analysis, specialize knowledge, or additional sensors are required for operation because the model trains itself using existing historic data. Application of this method on an actual cooling tower would allow the plant to more readily contribute flexibility and reliability to the grid by improving its overall heat rate as intermittent renewable energy becomes more prevalent. Additionally, this method can generalize to capture behavior of any system that is difficult to model, where real-time operational data is readily available, and the current control scheme simplifies a multiple-input-single-output system into a single-input-single-output system, such as treating a dozen cooling tower fans as a single manipulated variable. This work agrees well with the previous works of This optimization method is limited in that it depends on steady-state operation to be quickly achievable. Future work could consider extending this real-time optimization to dynamic optimization on systems that have significant dynamics and spend substantial time operating away from steady-state. Additionally, future work could also include applying the proposed technique to a physical system and comparing online optimized performance to historical performance.  The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. The authors are grateful for the funding sources provided in part by the