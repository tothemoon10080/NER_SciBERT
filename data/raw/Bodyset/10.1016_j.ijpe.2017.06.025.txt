This paper considers a generalization of the precedence-constrained knapsack problem known as multi-period precedence-constrained knapsack, in which the decision maker faces a horizon of several periods. Associated with each period is a capacity limit that cannot be exceeded by items chosen in that specific period. The motivation for studying this problem comes from a recognized problem in the mining industry, known as open pit mine production scheduling. An old, yet fast sequencing heuristic has been used in the literature to tackle similar combinatorial problems with precedence constraints. In this study, we first strengthen the LP relaxation formulation of the problem by adding inequalities derived from both precedence and knapsack constraints, and then use the LP solutions to generate efficient weights for the sequencing heuristic. Generating the heuristic's weights in this way significantly improves its output. Using this methodology, extremely large instances can be solved to near-optimum levels in minutes. The performance of this methodology is tested on a set of benchmark instances in the mining industry, where this problem is a major application.The knapsack problem is a well-known classical problem that has applications in a range of areas. This problem has been extended and/or adapted in different studies to deal with real-world decision-making problems, such as operating room scheduling ( Mining is the process of removing valuable material from the earth, processing it, and then selling it in the market to derive profit. In this paper, we consider The open pit mine production scheduling problem (OPMPSP) consists of determining the sequence in which blocks should be extracted from a pit over the lifetime of the mine, such that the net present value (NPV) of operations is maximized. Several operational restrictions must be taken into consideration while addressing OPMPSP using operations research techniques. For example, precedence constraints, known as geometric sequencing constraints, ensure that blocks are removed such that the deposit does not collapse inwards. This means that a given block cannot be excavated before its overlying blocks. This is identical to precedence constraints in the precedence-constrained knapsack problem. Resource capacities enforce limitations on the amount of material removed from the orebody and the amount of ore (valuable material) processed. The time horizon of the project is divided into smaller time periods, each having a certain amount of resource processing capacity as well as resource production capacity, known as the maximum processing capacity and the maximum production capacity, respectively. This is identical to knapsack constraints in the knapsack problem. Numerous heuristics and exact solution methodologies have been developed to address OPMPSP, including: block aggregations methods ( Numerous studies employed metaheuristics to address different variants of OPMPSP. Solving the LP relaxation of OPMPSP has also been taken into account. The solution procedures of Despite a wide literature on the deterministic variant of OPMPSP, the development of more powerful algorithms that can lead to smaller gaps from optimality is an ongoing area of research. This variant of OPMPSP is also being studied in the framework of the multi-period precedence-constrained knapsack problem (see The precedence-constrained knapsack problem is an extension of the classical knapsack problem. In the classical knapsack, each item Let Finally, In this study, we propose an LP-based algorithm based on the combination of a The efficiency of the proposed methodology is tested on a set of problems in the context of the mining industry (from MineLib ( The remainder of this paper is structured as follows. We describe our LP-based algorithm in Section Our algorithm is inspired by the work of Due to the fact that a DAG may offer a wide range of different topological sorts, a weight According to Based on the concept of mathematical expectation (expected value) in probability theory, it is not hard to see that the Chicoisne's Considering this fact, it is clear that if For a given precedence graph For a given set To describe cover constraints (inequalities), we present the two following definitions (  Following  The idea of using cover and clique constraints have also been utilized by For each Subject to: To describe clique constraints (inequalities), we present the subsequent two concepts following the definitions in   Let As stated above, the idea of using clique constraints has also been utilized by Our approach in Algorithm 1 requires solving the LP relaxation of MPK while this formulation includes cover and/or clique constraints. While this LP can be solved by simply using commercial MIP solvers (e.g., Gurobi and CPLEX), it may not be solvable in a reasonable timeframe for extremely large instances. Consider an instance of MPK with a single resource. Let LP-MPK be the LP relaxation of this MPK. Suppose that LP-MPK includes clique and/or cover constraints, and let In Algorithm 2, In regards to how Algorithm 2 is used in our approach (in Algorithm 1), it is necessary in this approach to solve the LP relaxation of MPK while cover and/or clique constraints have been added to this formulation. As mentioned earlier, commercial MIP solvers (e.g., CPLEX and Gurobi) can be used for this purpose, but they may fail to solve large instances in a reasonable computational time. Therefore, we use Algorithm 2 to solve these LPs. Note that Step 1 of Algorithm 1 also requires solving an LP, but this LP can also be solved by Chicoisne's CMA, as it includes no cover and/or clique constraints at this step. We, however, solve all the LPs by Algorithm 2 in this paper. As mentioned above, Algorithm 2 can only handle instances with a single resource, i.e., the MPK formulations that have only a single capacity constraint per time period (i.e., As mentioned above, OPMPSP is an important application of MPK. In this section, we test our LP-based algorithm by conducting computational experiments on a set of real and academically generated benchmark instances compiled by All experiments were run on a personal computer with an Intel Core i7 CPU at 3.40Â GHz, 16 Gigabytes of RAM, operating under Microsoft Windows 7. As stated earlier, we strengthen the LP relaxation formulation by adding clique constraints (for As mentioned above, To the best of our knowledge, five heuristics have been applied to address MineLib instances: 1) the modified TopoSort of Results obtained by the modified TopoSort of To set the values of In Increasing Increasing This paper considers the multi-period precedence-constrained knapsack problem, a generalization of the precedence-constrained knapsack problem. The primary difference lies in multiple time periods in which items are selected such that the capacity limit of each period is not exceeded. The main application of this problem can be found in the mining industry, where OPMPSP is addressed. The approach developed in this paper can potentially appear in the software packages that are designed to generate long-term production schedules for open pit mines in the mining industry. In this study, we proposed to generate realistic expected values for the decision variables of the problem by adding cover and clique inequalities to its LP relaxation formulation. These expected values were used as efficient weights to the well-known TopoSort heuristic. The methodology was tested on a set of benchmark instances in MineLib and the results were compared to five other heuristics that had already addressed the same set of benchmark instances. The best known NPVs reported for every instance in this library have substantially been improved by our algorithm. Among the six heuristics compared in this paper (including our algorithm), The addition of clique and cover constraints was found to be highly beneficial in terms of decreasing the optimality gap obtained by TopoSort. The addition of these constraints in the first iteration of the cutting plane framework ( As mentioned in Section  To prove the preceding theorem, we first prove that I) consider the following formulation: Subject to: Due to the fact that II) For any Also, for any Let We first prove that This constraint is satisfied by This constraint is not satisfied by Therefore, it is proved that III) This part proves that IV) So far, it has been seen that