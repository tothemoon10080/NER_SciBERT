The problem of annual production scheduling in surface mining consists of determining an optimal sequence of extracting the mineralized material from the ground. The main objective of the optimization process is usually to maximize the total Net Present Value of the operation. Production scheduling is typically a mixed integer programming (MIP) type problem. However, the large number of integer variables required in formulating the problem makes it impossible to solve. To overcome this obstacle, a new algorithm termed “Fundamental Tree Algorithm” is developed based on linear programming to aggregate blocks of material and decrease the number of integer variables and the number of constraints required within the MIP formulation. This paper proposes the new Fundamental Tree Algorithm in optimizing production scheduling in surface mining. A case study on a large copper deposit summarized in the paper shows substantial economic benefit of the proposed algorithm compared to existing methods.Solving the annual production scheduling problem is crucially important for surface mining since it determines the rate and quality of the production involving large cash flows, which can be hundreds of millions of dollars in magnitude. The scheduling problem is determining the optimal sequence of extracting the mineralized material from the ground, so that the total net present value (NPV) from the operation will be maximized, subject to a set of operational and physical constraints. In mining operations, a mineralized zone is first identified through exploration which involves drilling, mapping and geological interpretation. An orebody model is then developed to numerically represent the mineral deposit by dividing the field into representative three dimensional rectangular blocks. Each block is assigned attributes of the deposits such as the grades of elements that are estimated using information obtained by sampling drill cores. These attributes are used to estimate the economic value of each block, which is the revenue expected to be generated from selling the metal contained, minus the cost of mining and processing. Subsequently, the orebody model containing the deposit attributes and economic expected value are used to determine final pit limits, which are the limits of the deposit up to which it is economic to mine. Annual production scheduling is a decision problem, that is; which blocks within the final pit limits should be mined in which year to maximize the total NPV within a set of defined constraints. The mining blocks are aggregated into larger volumes that each of them can be mined out in a year. The problem is finding the best way to aggregate these blocks so that NPV can be maximized when these volumes are mined. The main physical constraint in open pit mining is the slope requirement; all the blocks on top preventing mining of a given block must be mined. There are often too many blocks, over 100,000, within the final pit limits to determine the optimum annual production schedule. To reduce the size of the problem, it is a common implementation to partition the material within the final pit limits into smaller volumes called “pushbacks” using one of the existing methods including Mixed integer and linear programming models are recognized as having significant potential for optimizing production scheduling in open pit mines, in which the objective is to maximize total discounted profit. However, MIP formulation of the production scheduling problem for open pit mines requires too many binary variables making it very difficult or impossible to solve. For example, if there are 10,000 mining blocks in a pushback to be scheduled over 3 years, it will require 30,000 binary variables to generate the MIP formulation. This would make it very difficult or even impossible to solve the MIP formulation. Recognizing the strength of operations research techniques in optimization process, Alternative efficient methodologies for long-term production scheduling that reduce the required number of binary variables are presented in In this paper, a new algorithm called “Fundamental Tree Algorithm” is proposed to reduce the number of binary variables required in MIP formulations and the number of constraints within MIP for optimizing annual production scheduling in open pit mines. The algorithm involves a newly developed linear programming model formulation to combine blocks into Fundamental Trees. A set of combined blocks is termed a “Fundamental Tree” if the combined blocks have the three properties: (i) can be mined without violating the slope constraints; (ii) the total economic value of the combined blocks as a fundamental tree must be positive; and (iii) a Fundamental Tree (FT) cannot be partitioned into smaller trees without violating (i) and (ii). It should be noted that all the blocks within the pushback considered for optimization must belong to a Fundamental Tree. It is shown in this paper why the LP model generates the Fundamental Trees (FTs) with the defined properties. After generating the FTs for a given mineral deposit, an MIP model modified from traditionally known MIP formulations is used to generate annual production schedules for mining. The proposed Fundamental Tree Algorithm consists of five steps that are schematically illustrated in The economic value of a block Some definitions and explanations are provided here to contribute clarification of the proceeding sections in the paper. If The steps of the FT Algorithm illustrated schematically in Generate a network for the blocks within a pushback. In the network, the blocks are represented by nodes and the mining slope requirement is represented by the arcs. The arcs in the network represent the node precedence relationship within the pit. An arc is set from each positive value node to all the overlying negative value nodes on the upper levels that have to be removed before accessing the underlying positive value node considered for removal. This node precedence relationship within the network is determined by using one or more cone templates as discussed previously. Find the cone value CV Assign coefficients to the positive value nodes according to their cone value. This may also be considered as ranking of these nodes by elevation, or level. On the top most level where one or more positive value nodes exist, the node with the highest cone value is assigned to 1, and the second highest cone value node is assigned to 2, and so on. For instance, if there are 3 positive value nodes on that level, the node with the smallest cone value is assigned to 3. Then, the ranking process moves down one level. If there are some positive value nodes on that level, the node with the highest cone value is assigned to 4. Otherwise, a lower level is searched for positive value nodes. The process is performed for all the positive value nodes within the network. If two or more positive value nodes on the same level have the same cone value (tie condition), the coefficients are assigned randomly; two nodes must not be assigned the same coefficient. For example, nodes Set up the linear programming formulation as discussed in Section If the number of trees obtained is the same as the number of the trees obtained from the previous solution, go to Step 7 as the problem is considered to be at optimal, and the algorithm is stopped. If the number of trees is higher than the previous solution, keep the currently found connections between nodes and go to Step 6 to generate a new network to be used for iterating the algorithm. Initially, one can assume that whole network is 1 tree. Usually, two or three iterations are required for convergence. After obtaining a solution from LP model in Step 5, a new network is generated for this new solution. To generate the new network, first the arcs in the previous network having no flow in the LP solution are deleted. After arc deletion, the nodes that are connected to each other are identified. The deleted arcs that exist in the previous network between the connected nodes are added again to the network. After generating the network, go back to Step 2. Stop Application of the Fundamental Tree Algorithm is discussed using an example that can be considered as a cross-sectional view of some blocks on two consecutive elevations, or levels, given in A network is generated as shown in If the economic value of node Coefficients The initial problem formulation and its solution are given in After obtaining a solution from the LP model in Step 5, a new network (see The cone value of node 6 CV Coefficients The iterated problem formulation and its solution are given in Since the number of trees from the current solution 3 is greater than the previous number of trees 2, the algorithm should normally move to Step 6. However, since there is no tree containing more than one positive value node in the results, it is impossible for any tree to be partitioned into sub-trees and repetition can be skipped in this case by going to Step 7. Stop the algorithm. In the final solution, the trees have the three defined properties of the fundamental trees as discussed in Section This section discusses the LP formulation of the Fundamental Tree Algorithm. The objective function is minimization of arc connections in the network weighted by the assigned ranks. The objective function is expressed as If there is one or more positive value nodes on level 1, there is no need to include them in the formulation because there are no arcs formed from these nodes. Since they already possess the defined properties of the fundamental tree, they are only considered in calculating cone values at Step 2, but not in the LP formulation. The objective function is constructed in a way that the arcs will be set from high cone value nodes to support the negative nodes above them. In a given level, it is considered that the highest cone value node, say node A positive value node is limited in flow capacity to its value, which is constrained from source node, Constraints are imposed on the arcs going from negative valued nodes to sink node Without using Note that if The total flow coming to a negative value node must be equal to the flows leaving that node. If the number of positive value nodes that arcs are set from towards the negative value node The total flow coming to a positive value node The initial LP formulation and solution for the example network model given in After generating the fundamental trees for a given orebody model, the annual production scheduling can be formulated as an MIP model treating each tree as a block having certain attributes discussed in Section The Fundamental Trees have three major properties by definition as given earlier in Section  The property of the trees to be positive may raise the question: what happens if a tree has negative value. It is stated in Section  The arcs in the initial network are set from each positive value node to all its overlying negative value nodes which are forced to be fully supported. In a situation where a positive value node, say  MIP scheduling formulations of the trees are done by treating each FT as a block having certain amount of ore tons with average grade of commodities and possibly some waste tons. Since binary variables are assigned to the FT’s instead of blocks, the number of sequencing constraints, given in Eqs. The optimization model is maximization of the NPV, or discounted economic value, to be generated from the mining operation and hence for scheduling If the economic discount rate is Similarly, the cost of mining the waste material can be calculated using Eq. The number of binary variables (NB) required for the MIP model using FTs is equal to the number of FTs multiplied by one less the total time period to be scheduled, which can be expressed as, NB It is very important to maintain correct slope angles for the walls surrounding mined out areas in open pit mines. The slope cannot be too steep to prevent the side walls collapsing towards the zones of mining activity and it cannot be too shallow so as to avoid extracting too much waste material which can substantially increase the mining cost. Precedence of the FTs in mining operations can be identified using cone templates as in moving cone method ( The sequencing formulation can also be written as in Eq. Another set of constraints that may also be considered as sequencing is that before mining the ore tonnages from a given FT, all the waste tonnages must be mined out in that FT. If To achieve a possible low cost at the processing plants, the ore material sent to the processing plant is sometimes constrained to have a grade (gram per ton, ounce per ton, or % metal contained) within a range of values. Assume that The processing plant is limited by the amount of ore material it can process during a time period. A lower bound may also be applied in some cases to ensure that the processing plant will not be idle, and to avoid or reduce undesirable fluctuations in the production. For Since the production scheduling is performed within the final pit, or a pushback, constraints are needed to ensure that all the material considered in optimization will be mined out. These constraints ensure that ore tons in each FT must be mined in a single period: Stripping ratio is defined as the ratio of total amount of waste material mined to the amount of ore produced. At some mining operation, stripping ratio is also limited at a maximum value. If the stripping ratio is SR, for a period The total amount of material mined during a year cannot be more than the total mining capacity of all the equipments, MCap. This requirement in open pit mining operations is expressed by In some of the mining operations, the total tonnage of waste to be stripped out in a period is restricted not to exceed a waste stripping amount WC The application of MIP model in annual production scheduling of open pit mines is shown using the example containing three FTs. Although some of the constraints in this application may seem redundant, or the result may also be obvious, all the constraints assumed to exist in this case are written for illustration. The FTs determined previously are illustrated in Discounted cost of mining one ton of waste material for the example problem is calculated as follows: By inserting the calculated values to the objective function in Eq. The sequencing constraints between the second tree and the first tree given in Eq. The constraints in Eq. The same constraint for the second period is written as 30 The grade constraints given in Eqs. The processing capacity is assumed to be limited with an upper and lower bound in this model. The requirements for this processing plant can be expressed using Eqs. The constraints in Eq. Eq. The total capacity of the equipments in removing ore and waste material are limited during a given year at a maximum of 50 tons. This requirement given in Eq. Solving the MIP problem results in mining FT 1 during the first year ( One of the case studies is performed on a large copper mine in Southern Peru that contains about 1 million blocks in the orebody model and has two ore processors, leaching process and mill plant. The proposed Fundamental Tree Algorithm reduced the number of blocks within the ultimate pit limits from 38,457 to 5512 fundamental trees. The MIP scheduling model is applied to develop a production schedule over 8 years for the mine. This was impossible to perform without applying the Fundamental Tree Algorithm due to large number of binary variables and large number of sequencing constraints required in formulating the problem. In one of the pushbacks scheduled over 4 years, the number of blocks were about 12,600. This would normally require 37,800 binary variables in the traditional MIP formulations, but FTA combined the blocks into 1640 trees, resulting the MIP scheduling model containing 4920 binary variables being solved in about 36 minutes with 5% gap. The number of constraints is also significantly reduced by using FTs instead of blocks in the MIP formulation. Traditionally, sequencing constraints would be required for about 12,350 blocks excluding the top level. The proposed LP algorithm requires the sequencing constraints for only 1640 FTs, which is about 7.5 times fewer constraints. In mining, a gap less than 10% is often accepted as a good solution considering the uncertainty in estimated block grades used as input to the model. For this single project, the method produced $25M (∼7%) higher NPV than the best NPV generating schedule obtained among three commonly used traditional software packages including MINTEC’s M821V, Earthworks’ NPV scheduler, and Whittle’s Milawa schedulers in the Four-X program. The NPV values are calculated after designing the haul roads and smoothing the pits that makes the profit achievable through the actual mining operation. A detail description of the proposed scheduling process, calculations and various maps can be found in In this paper, a mathematical programming model is developed using linear variables to produce Fundamental Trees for any given orebody model for open pit mines. This model does not include any integer variables so that it solves large problems without running into time constraints. The number of integer variables required for the MIP scheduling formulation is decreased substantially using the fundamental trees. Since the number of FTs produced is significantly less than the number of blocks in the model, the number of constraints are also substantially less than the traditional MIP scheduling formulations. Therefore, large open pit production scheduling can be optimized by MIP modelling for any objective such as maximizing NPV of a given mine project, or to solve hard ore quality and grade blending problems. It should be noted that alternative solutions may be available to find the fundamental trees, which means the same number of fundamental trees may be determined with different configurations of connected blocks. However, determining all the possible configurations of the trees and measuring their effect on the scheduling are not performed. A significant difference in the scheduling results for different block configuration of fundamental trees is not expected due to the structure of the FTA that makes the higher cone value blocks feasible to mine before the other blocks. The author express special thanks to Prof. Roussos Dimitrakopoulos for reviewing this paper. The project was partly sponsored by Natural Resources Research Institute of Minnesota.