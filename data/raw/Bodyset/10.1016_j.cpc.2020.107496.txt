Numerical modeling is an essential approach to understanding the behavior of thermal plasmas in various industrial applications. We propose a deep learning method for solving the partial differential equations in thermal plasma models. In this method a deep feed-forward neural network is constructed to surrogate the solution of the model. A loss function is designed to measure the discrepancy between the neural network and the equations describing thermal plasmas. A good neural network is obtained by minimizing this loss function. We demonstrate the power of this deep learning method by solving a 1-D arc decaying model which consists of three cases: stationary arc, transient arc without considering radial velocity, and transient arc with radial velocity respectively. The results show that the deep neural networks have excellent ability to express the governing equations of thermal plasmas. This could bring us a new and prospective numerical tool for thermal plasma modeling.Thermal plasmas are partially or strongly ionized gases which are usually produced by electric arcs, RF discharges, microwave discharges, and laser induced plasmas With the development of artificial intelligence and machine learning in the last decades, we nowadays have a new powerful tool for solving differential equations via deep learning in form of deep neural networks (DNNs) The rest of the paper is organized as follows. In Section In this work we propose a deep learning method for thermal plasma modeling​ by taking advantages of recent developments in artificial intelligence, such as automatic differentiation and acceleration of graphics processing unit (GPU). Since the equations used to describe thermal plasmas are partial differential equations defined on spatio-temporal domain As illustrated in  Lastly, we need to search for good weights Next, we demonstrate the power of this deep learning-based method by solving 1-D arc decaying model as an example which consists of three cases: stationary arc, transient arc without considering radial velocity, and transient arc with radial velocity respectively. The governing equations, boundary conditions, and initial conditions are listed in  In the first case, we construct a 6-hidden-layer deep neural network with 50 neurons per layer to solve the Elenbaas–Heller equation which describes the radial temperature distribution of a steady arc in a cylindrical column Since the electrical conductivity, thermal conductivity, and the net emission coefficients in the radiation model are all dependent of arc temperature, we use 6-hidden-layer deep neural networks with 20 neurons per layer to fit the functional relationship between temperature and these plasma properties. All the source data are compiled from our previous works  In the second case, we add a transient term in the equation which describes a decaying arc with time. This usually exists in the extinguishing process of interrupting arc in gas-blast circuit breakers Also due to the transient term, a larger neural network than that in the first case is needed to surrogate the temperature of transient arc. In this work, 6-hidden-layer deep neural network with 200 neurons per layer is used in solving Eq. In the last case, we take into account the effect of radial velocity This case is more complicated than the second case because the two differential equations must be solved in a coupled way. Therefore, we use a larger neural network than that in the second case, i.e. a 6-hidden-layer deep neural network with 300 neurons per layer. There are two outputs in the last layer of this neural network, corresponding to the temperature  In summary, we propose a deep learning method for thermal plasma simulation. More specifically, we use deep neural networks to solve the partial differential equations describing thermal plasmas. The power of deep learning in this kind of task is demonstrated preliminarily by solving a 1-D arc decaying model. This could bring plasma community a new and prospective numerical tool for thermal plasma modeling. Following this philosophy, this deep learning-based method could be extended to more complicate thermal plasma modeling in the future work.  The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper. This work was supported in part by the  Firstly, we fix the number of neurons in each hidden layer which is 50 in this work, and change the number of hidden layers. The relative L Lastly, we fix the number of hidden layers to be 6 and the number of neurons in each hidden layer to be 50, and change the number of uniformly sampling points as training data. The relative L