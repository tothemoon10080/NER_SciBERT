In this article, a new operator namely the kin selection operator is introduced, which significantly improves the performance of conventional simulated annealing (SA) algorithm. Inspired by a phenomenon of the same name observed in the evolutionary system, the proposed approach offers better solutions by sacrificing a solution for its `kin'. By doing so, it ensures an efficiently guided, thorough search in the neighbourhood of the best solution. Theoretical analysis is performed to show that the basic tenets of SA hold for the proposed methodology as well. Moreover, such a methodology also provides enhanced probability of survival of critical information patterns in the solution space. Experimental comparison with SA on a large number of function optimization problems is performed. In order to validate the performance of the proposed methodology over the conventional SA, a well known NP hard problem that deals with multi-level lot-sizing and scheduling problem in a PCB manufacturing firm is taken as an illustrative example.Select an initial solution Select an initial temperature Set temperature change counter Do: Set iteration counter=0; Do: Generate an solution Calculate Δ If (Δ {  iteration counter +=1; } else if (random (0,1) {  iteration counter +=1; } While (iteration counter  While (Termination criterion fulfilled) KIN SELECTION If ( { if (random(0,1) {  } } Where Simulated annealing (SA) belongs to a class of non-traditional randomized search and optimization techniques. It derives its name from the similarity that it shares with the physical process of annealing. The essential difference between the conventional search techniques and simulated annealing is that, in SA, the search is randomized in nature and probabilistic transition rules are applied to change from one stage to another. It incorporates domain specific knowledge while performing a search to yield near optimal solutions in highly complex, large and multi-nodal search spaces. SA finds numerous applications in solving various combinatorial optimization problems ( The conventional SA algorithm is briefly described as follows: in each step of the algorithm, a random solution in the neighbourhood of the solution is generated and the resulting change in the fitness of the objective function, Δ A random number, uniformly distributed on the interval [0,1] is selected and compared with In this article, a new operator namely the The rest of the article is organized as follows. An introduction to the kin selection operator is provided in In this research a new operator termed as `Kin selection' has been introduced to the traditional SA algorithm. To understand this operator, we have to first understand the random solution generated in SA from an entirely different perspective. A randomly generated solution that fulfils the constraints of the problem, is basically a collection of information, distributed in the form of numbers throughout the solution coding space. The fitness of a solution depends totally upon the pattern in which this information is distributed in the randomly generated solution. Normally as the SA progresses, we get a better distribution of this information (this can be concluded from the fact that the fitness of solution improves as SA proceeds). In fact, the optimal solution is one in which this information is distributed in the most favorable (with respect to the objective function) manner. Randomized optimization methods as SA and Genetic Algorithms (GA) utilize this concept and cause the information distribution to be improved in each generation. Such a phenomenon is also believed to occur in nature and plays an important role in the evolution of higher organisms. Based on the rule of `survival of the fittest', each forthcoming generation is considered to be more healthy (and hence fit) than their antecedents. The motivation of employing kin selection operator arises from the theory of evolution. The idea can be best introduced by quoting a remark of Hence a solution, which reduces the probability of survival of an individual carrying it by producing a corresponding increase in the fertility or `probability of survival' of relatives/neighbours, can witness an increase in frequency. This process has been called Kin selection ( In this research, the idea of kin selection has been exploited by introducing a new kin selection operator in the conventional SA. The application of this operator is controlled by two variables namely KINPROB (for kin probability) and KINDEFN (for kin definition). While the latter variable helps in identifying the ` In this research, the determination of the `kin' of a solution is done by applying the concept of `Hamming distance'. A random solution having a Hamming distance of less than KINDEFN times the total number of bit positions (which equals the product of number of periods times the type of items to be produced) is considered to be a kin of the best solution. One of the direct consequences of the application of this operator is the increase in the search area as new solutions that temporarily degrade the solution are accepted with a higher probability compared to the conventional SA. However, as the SA itself employs a similar strategy in the initial stages to escape premature convergence and entrapment in local minima, the kin definition variable KINDEFN is defined such that in the initial stages very few randomly generated solutions are identified as kins. Moreover, their probability of occurrence increases with each instance of successive temperature change. In the later stages of a SA run, the application of kin selection operator helps in a better way to perform an efficient guided search in the neighbourhood of the sacrificing solution. Being a kin of the sacrificing solution it shares most of the same attributes as its predecessor and hence its fitness is generally not much lower than that of sacrificing solution. In this way it aids in the convergence of the SA algorithm as well as enhances the search area in the final stages of SA. The algorithm of the kin selection operator is presented in Let there be an An information pattern In SA, when an inferior solution is generated in the neighbourhood of the solution under consideration, it is accepted with a probability associated to it. Let there be an information pattern It can be shown that in two randomly generated As the value KINDEFN is significant (usually It is significant to highlight that in the preliminary stages, the search in SA is shallow as any randomly generated solution has a significant probability of being accepted. This helps the SA to escape from local entrapment and hence escape premature convergence. In the later stages, the probability of acceptance of inferior solutions is significantly reduced. This makes sense, as in the later stages, the solutions under consideration are generally too precious to exchange with just any inferior solution. Kin selection improves the conventional SA algorithm by supporting the random search in the preliminary stages and then defending the significant solutions strongly in the later stages of SA. It does so in the later stages by replacing the solutions under consideration with another solution, which is very similar to the best solution. This is achieved by defining the probability KINPROB in Eq. Clearly the value of KINPROB decreases as Extensive computational comparison of the proposed methodology with that of conventional SA is carried out for a variety of optimization functions with varying complexity. Moreover, the proposed methodology is applied to solve a sufficiently complex NP complete problem namely the The function description, results and involved discussions are now presented in detail. Such functions were also employed by This function has one local and one global maxima ( This function with one global and one local maxima deals with a situation where the collecting area of the local maxima is much larger than the collecting area of the global maxima. The function is defined as follows: This function contains large plateau regions that are areas in the solution space with same objective function value providing no uphill direction ( The The function is of the form This is function of two variables, (  Graphical demonstrations of the variation of the average and best objective values are shown in For function 3, the behaviour of SA was found to be unpredictable indicating the tendency of SA to fall into a local minima and get entrapped in it. For most other functions, it is observed that kin SA gives sub optimal solutions for lesser iterations per generation compared to the conventional SA. MLLSS Problem belongs to the present day's toughest short-term production planning problems, as mentioned by several researchers ( In this problem, within a specified (finite) planning horizon which is subdivided into discrete periods of time, we have to produce several items on one single machine. The capacity of machine per period of time is limited while producing an item consumes an item-specific amount of the capacity. External demands are assumed to be deterministic but dynamic. However it does not take into account the factors that cause shortages of items. Before an item can be produced to meet a demand, all its predecessing items must be manufactured with respect to an item-specific lead-time. The production of these items may in turn cause (internal) demand for preceding items and so on. Once an item is produced, it is held in inventory, which incurs holding cost for any period of time. An item can be processed on the machine only if the machine is setup for that item. Moreover, an item specific setup cost is incurred every time the machine is setup for a particular item. For simplicity, we assume that no initial inventory for any product exists. However, this assumption is not restrictive as mentioned by The proposed model for the aforementioned problem is as follows: The objective In this problem a linear product structure as shown in The optional set of parameters employed for this problem is given as below: The values of setup and holding costs for various items are given in The results given by kin SA and conventional SA for the problem are demonstrated graphically in In this article, a new operator namely the kin selection operator is incorporated in this SA algorithm. Theoretical analysis followed by extensive computation is performed on a large variety of problems to study the performance of the proposed operator over the conventional SA algorithm. It is observed from the results that the proposed operator outperforms easily the conventional SA algorithm. Although the applications dealing with complex problems have demonstrated the effectiveness and robustness of the kin selection operator, there is still considerable room for further research. For example, incorporating different styles of convergence, KINDEFN and KINPROB initialization rules etc. are worth issues for further research. Another direction of potential interest may be the application of this algorithm to various NP hard problems. In order to demonstrate the effectiveness of the proposed algorithm we have considered only linear product structure as a test bed. However, further extension can be pursued with more complicated product structure. It is further suggested that proposed kin SA based optimization algorithm can be employed to solve a few well-known polynomial hard problems and its performance can be assessed against other evolutionary algorithms. Authors wish to express their sincere thanks to anonymous referees and Prof. J. Wallenius for their many valuable comments and criticisms. We also greatly appreciate the insight and critical input provided by Prof. Alok Baveja (Information and Management Science, Rutgers, The State University of New Jersey, USA) at the time of conceptualizing the proposed solution methodology.