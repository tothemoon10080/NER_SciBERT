This paper examines the opportunities arising from the use of optimization in the fields of mining, metal and mineral (MMM) processing. A brief overview of optimization is given. Our main goal in this paper is to raise awareness to the use of optimization as a key enabling technology in the MMM field.Arguably every design problem involves some form of optimization. However, often the optimization is implicit rather than explicit. We argue here that making optimization explicit has many advantages including the provision of a clear articulation of the design objectives and trade-offs. Optimization can play a role at many levels in an enterprise including design of elementary feedback loops, coordination of feedback loops, interconnection of unit operations, supply chain management and long-term corporate investment strategies. Examples of the use of optimization to solve real world design problems can be found in many areas. Our goal in this paper is to give a brief overview of optimization. We will also reflect on several case studies arising from our own experience in the fields of mining, metal and mineral processing. A general formulation of a typical optimization problem is as follows Different names are associated with different forms of the optimization problem, e.g., when when when when An important class of problems arises when some of the variables defining the problem are uncertain. In this case, probabilistic descriptions can be used for the uncertain variables. This leads to the class of problems known as “stochastic optimization” for which special techniques are available. Engineering design problems typically fall into the MINLP class since one is often required to make architectural choices (i.e., select from a discrete set of alternatives) and then to specify a number of continuous variables (i.e., select variable component sizes). In all optimization problems, convexity is an important issue. Indeed, modern theory shows that suitably structured convex optimization problems (including most linear and quadratic problems) are tractable. Indeed, Interior Point Algorithms utilizing Newton type iterations often find an acceptable solution with relatively few iterations. Clearly this is a major “selling point” for using optimization strategies. One of the key challenges in applying optimization to engineering problems is that of modelling. Indeed, the judicious choice of variables, constraints and cost function is a crucial, and often formidable, step. In recent years, the key step of modelling has been facilitated by the advent of interface software including GAMS Naturally, there exists a strong interplay between the problem formulation (i.e., modelling) and the solution method. We advocate that it is often a good idea to start simple and add extra features as one gains confidence in both the problem and its solution. We also advocate the judicious use of “toy problems” to gain a feel for the question and its solution. (A “toy problem” is one with just a few variables but which captures important features of the problem under study.) Toy problems can give valuable insight and avoid wasted effort dealing with the thousands (or even millions) of variables that typically occur in real world design problems. Once one has modelled the problem, then the next step is to seek a suitable solution strategy. The solution strategy is a function of the nature of the variables, cost function and constraints. A brief overview is given below. Further details may be found in, for example, When only continuous variables appear in an optimization problem then this is a substantial advantage. The simplest class of problems of this type are LP problems for which the standard algorithm is the simplex algorithm. Another simple class is when the cost is quadratic and the constraints linear. These problems are termed quadratic programs (QP) and can typically be solved in a finite number of steps. For more general nonlinear programs (NLP) one must rely upon iterative solvers such as those that utilize Newton type steps to satisfy necessary conditions of optimality. There is a wide variety of algorithms available (active set, interior point, etc.), see for example the package TOMLAB Another important class of algorithm (termed Simulated Annealing ( Another class of algorithms (termed genetic algorithms (GA) ( When discrete choices appear in optimization problems then this leads to inherent difficulties. For example, these problems are certainly nonconvex. Branch and Bound methods Uncertainty is often a key issue in optimization. In this case, there are different modelling approaches that one can use. For example, one can deploy deterministic uncertainly bounds or probabilistic descriptions. Either approach will tend to add significant complexity to the underlying optimization problem. A simple strategy is to base the solution only on the nominal (or expected) value for the uncertain variable. However, this can be misleading since the resultant solution will, almost certainly, be nonoptimal, or, indeed, even infeasible (i.e., violate key constraints), under certain reasonable realizations for the uncertain variables. If there are hard constraints then one must examine each possible realization to ensure constraints are not violated for this realization. Many optimization problems have a temporal character (i.e., one wants to optimize over some future time horizon). Also, it is often true that actions planned for the far future have a diminishing effect on what is the best action now. In this case, it makes sense to reduce the time window to capture the horizon over which the current decision has its greatest impact. Having carried out the optimization over this restricted horizon, one can lock in the current action and then move the window forward starting at the next time step. The set of decisions designed with one horizon becomes a good initial guess for the decisions over the next displaced horizon. Surprisingly, it turns out that it is sometimes possible to use very short planning horizons. For example, it is known that horizon one optimization in control correspond to widely used anti-windup strategies to deal with actuator saturation. The latter are very simple but are known to give excellent performance in many cases The idea of receding horizon optimization opens up many other possibilities for simplifying computations. For example, within a given optimization window, one need not use uniform time discretization. Based on the idea that future actions have only a second order effect on the best action to take now, then one can use time steps that grow larger towards the end of the interval. If one locks in the current action and moves the horizon forward a small time step followed by another nonuniform quantization of time, then one can design a finely quantized policy by solving a (rolling horizon) sequence of simpler problems. There exists a substantial body of software for solving optimization problems; some commercial, some freeware. A good first step for practitioners looking for optimization software is the NEOS server (www-neos.mcs.anl.gov). Control engineers often first try the optimization routines available in Matlab A user of optimization needs to be cautious of the blind application of nonlinear optimization methods. For example, typical algorithms are iterative in nature and thus there always exists the possibility of nonoptimality of solutions due to bad initialization or premature termination. Also, one can easily get trapped in a local (as opposed to global) optimum. Special precautions are necessary to safeguard against these possibilities. In this section we briefly review several classes of optimization problems that frequently arise in mining, metal and mineral processing. One of the best known, and most successful applications of optimization in mining, metal and mineral processing has been constrained model predictive control (MPC) A core idea used in MPC is that of receding horizon optimization (see Section At time Apply only the first step in the resulting optimal control sequence. Measure the state reached at time Repeat the fixed horizon optimization at time In particular, for time-invariant systems and functions in the optimization problem, we can set If we denote the minimising control sequence, which is a function of the current state The above receding horizon procedure An important aspect of receding horizon-constrained control is that closed loop stability can often be guaranteed provided one chooses the final state weighting and final constraint set appropriately Constraints can also be important in state estimation problems. For example, it may be To illustrate the key ideas, we consider the case of a linear system satisfying the following linear Markov model: We consider estimation using data from time 1 to Given the observations Further to the above developments one can also utilize rolling horizon ideas for constrained state estimation. For example one can use the observation interval Another class of problems of interest in mining, mineral and metal processing is that of scheduling. These problems typically involve discrete variables and thus fall into the MILP or MINLP categories. To illustrate, let An important concept in optimization is that of duality. Duality often gives insight into optimization problems and is exploited in some optimization algorithms. In this section, we will briefly review the idea of duality and illustrate it by describing the symmetric dual relationship that exists between constrained control and estimation. Consider the primal problem as in The  In the dual problem Given the primal P An interesting geometric interpretation of the dual problem can be made by considering a simpler problem with only one inequality constraint and no equality constraint. Consider the following primal problem P:  Now, consider the Lagrangian dual problem D:    We use the definition of   Note from We have argued in Section For simplicity, we consider only the case where    See We can think of  In this section we will briefly overview three case studies drawn from the mining, mineral and metal processing area. We will utilize these case studies to highlight some of the general points made in previous sections. In particular, we will discuss the interplay between modelling and solution methodology. Various other observations arising from the case studies will be highlighted. This case study is an example of continuous variable optimization. Earlier attempts to solve this problem were based on conventional control methods. However, the fact that the problem is inherently nonlinear with hard constraints makes optimization a natural choice. Further details may be found in Continuous strip hot-dip galvanizing lines represent a significant and complex industrial control application A simplified diagram of a continuous strip hot-dip galvanizing line is depicted in An interesting aspect of the problem is that the gain relationship between the aperture of one nozzle on the air knife and the coating mass density on the strip is nonlinear. This nonlinear gain is determined by several variables including the strip speed, the separation between the air knife and the strip, the air jet pressure, etc. The nonlinear gain is usually approximately known (say within an error of less than 5%). A typical curve is shown in In addition, the pressurised air blown by each nozzle not only affects the coating mass directly underneath the nozzle but it also affects the coating mass density at nearby positions on the strip. This phenomenon is typical of systems with a spatial distribution similar to that exhibited by the galvanizing line process. input amplitude constraint: first difference constraint: second difference constraint: constant average nozzle opening: Similarly, the average coating density across the strip is mainly controlled by the separation between the air knife and the strip. Thus, in order to prevent the coating mass control loop from modifying the average coating density across the strip, the following equality constraint is imposed: constant average coating density: A mathematical model relating the nozzle apertures with the coating density on the strip can be derived directly from the available information on the spatial interaction shown in A difficulty is that the system has a complex delay structure due to the nature of the scanning gauge that provides the coating density measurements. At a given sampling time, the coating density measurements all have different time delays. It is thus a challenging modelling problem to deal with these delays. We adopted an internal model approach to this problem as shown in Having modelled the problem, the next step is to specify a suitable algorithm. Our first choice was to approximate the nonlinearity by a set of piecewise linear models. Piecewise affine ideas were then used to convert the optimization problem into a set of interconnected QP problems A very simple suboptimal strategy was then tried where a gradient of the cost function was evaluated and a linear search was employed in the gradient direction to minimise the cost whilst respecting the constraints. Only one gradient evaluation was conducted per time step. Of course, this is a highly suboptimal strategy. However, for this particular problem, it was found to give results that were very close to those obtained by the much more complex piecewise affine strategy. Typical output and input profiles are shown in These problems contain integer variables and thus fall into the MILP framework. We will provide a brief introduction to the problem below (see also The basic idea of open cut mining can be visualised in The above mine planning problems are typically formulated as MILP problems Accordingly, we define the mine state as the set of pit depths at the locations of the surface. We represent the evolution of this state via a linear, discrete-time dynamic model where mining action is the control input. Specifically, we denote by Constraints can be incorporated in a natural way in the state-space formulation presented. For example, note that The value of the body of ore at different locations is typically obtained by preliminary drilling work. Using this information one can construct a value function A key point about this problem is that it is too complex (in its raw form) to be solved in any reasonable sense. (The raw “block model” has We have made extensive use of GA’s in the context of mine optimization. We have found GA’s give rapid initial reduction in the cost function followed by slow final convergence. Thus, in this context, GA’s seem to provide a useful way of getting good initial estimates for other solvers. We have tried several MILP solvers. In particular, we have made extensive use of CPLEX We have also developed specific software ourselves based on the control orientated model. In developing our own software, we made several important observations. For example, we found that nonuniform time quantization (see Section As our confidence in the problem grew, more challenging features were added to the model, e.g., ensuring proper access for trucks and adequate space at the bottom of each phase for mining equipment to operate. These required additional attention to modelling. We recall that the model used in Section  Open loop: here one calculates the future “controls” based purely on the expected future value of uncertain variables. One then implements the control sequence blindly (irrespective of what actually happens). Reactive: here one calculates the future “controls” as for the open loop case. However, one only implements the first step. One then takes new measurements and updates the estimate of the current “state” and repredicts the value of the uncertain variables. One then redoes the optimization over another future horizon and implements the first step, as for MPC see Section Closed loop (or with recourse It is heuristically reasonable that the performance improves in the order open loop, reactive and closed loop. However, the difficulty of solving the problem increases in the same order. Thus, one needs to be sure that the more sophisticated strategies are truly worthwhile. This is problem dependent. Three key issues arose in the context of applying stochastic optimization to the mining problem namely: how to formulate a closed loop solution, how to model uncertainty and whether reactive planning would suffice or whether one should consider a closed loop solution. These issues are briefly addressed below. To fix ideas, we will begin with a simplified problem. (Recall the comments made about “toy” problems in Section Consider a grossly simplified situation where the planning horizon has only three stages. Also, let us assume that there is only one uncertain variable and that there are four possible realizations (“scenarios”) for this variable as shown in In this figure, the price at stage 1 can only take the value Next we consider the associated optimization problems. To begin let us conceptually think of using four optimization problems (each corresponding to a separate price scenario). Note that the scenarios have a tree like structure, i.e., Following the above reasoning, we introduce four corresponding optimization problems with inputs  It is important that we do not use information about price until it becomes available. This is captured by adding constraints that ensure that the optimization variables are equal at each node of the price scenario tree. For the example above, these constraints have the form: Following the comments made in the previous section, we see that it is highly desirable that one approximate the uncertain variables by a small set of “representative” realizations. For example, if we consider the price of copper over a 10-year horizon, then this is potentially a real random variable in   We refer the reader to the literature on the topic of scenario generation available in the mathematical finance and operations research fields The choice of best scenarios is a difficult problem. Indeed, it could be argued that the ultimate test of whether a given set of scenarios is “good” is to try them on the real problem. However, one is usually only motivated to consider scenario design when the real problem is very complex. Thus using the real problem as the “test bed” is usually not a feasible option. One is then forced to simplify the question of choosing scenarios to a related approximation problem. To illustrate, we refer to an algorithm for scenario generation which is related to “code book” design in signal processing. Let The USA copper price (normalized by the Consumer Price Index (CPI) conversion factor) over the years 1965–2005 is shown in We will choose 125 scenarios and we will initially assume that the year is 1993. This will give us nine further years (from 1994 to 2002) in which we can compare the generated scenarios with the actual price changes. (Of course, in practice, the scenarios are used to describe future uncertain variables.)  The scenario tree shown in From Sections A simple mine planning problem: here the geometry of the mine was very simple and thus, one might anticipate that closed loop might not yield significant benefits compared with reactive planning. Indeed, this turned out to be the case A very simple toy example: so as to gain insight into the condition under which closed loop planning would yield significant benefits over reactive, we took a “toy” mining problem consisting of a one-dimensional vertical homogenous ore-body with uncertain ore price. Details are given in Nonetheless, this conclusion needs to be viewed with some caution. Indeed, we have studied other problems (e.g., Networked control with random packet loss) where closed loop planning gives major benefits over open loop and/or reactive planning Before concluding the paper, we wish to caution against blind adherence to “optimality” as a design criterion. The point here is that the word “optimal” is a loaded word. In reality it simply means that one has found the maximum (or minimum) of some mathematical criterion. An entirely different question is whether or not the criterion adequately captures important practical features of the problem. Our point is that it is often better to have a deep understanding of a vague question then an exact answer to the wrong question. This idea is related to old ideas presented in the control literature in Some questions (amongst other) that a user of optimization tools might ask are as follows: How should I model the problem? What variables are important? What are the key constraints? What is the cost function? Is uncertainty a major factor, and if so, how should I model uncertainty? Are we interested in average performance, worst case performance, average performance subject to constraints on worst case, etc.? Has the software reached the global optimum or terminated prematurely? How sensitive is the solution to key variables (typical optimization software provides information on sensitivity as part of the solution)? Are there benchmarks (e.g., Does my model capture key issues of importance? Are the nonlinearities that I have included sensible? Do we understand all of the performance limitations applicable to the problem (e.g., “optimization” will not prevent a nonminimum phase plant from exhibiting undershoot)? Would a radically different approach give a better answer? For example, we have several examples in rolling mill control, where one can only achieve the desired level of performance by using a radically different “architecture” for the controller. This takes one outside the realm of optimization. This paper has examined the opportunities that arise from the application of optimization in the mining, metal and mineral processing field. Several examples, drawn from the authors’ experience, have been used to illustrate the interplay between modelling and solution strategies. Also, we have used these examples to reflect on the pluses and minuses of using optimization. We believe that optimization offers huge potential in mining, metal and mineral processing, provided it is used thoughtfully and in the context of wider knowledge of performance limits. In writing this paper we have drawn on the results of many of our friends, colleagues and co-workers. We wish to specifically mention Adrian Lewis (a reviewer who allowed his name to be revealed), Rick Middleton, Claus Müller, Peter Stone, Merab Menabde, Mei-Mei Zhang, Bryan Hennessy, Osvaldo Rojas and Cristian Rojas.